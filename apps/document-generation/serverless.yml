service: document-service

provider:
  memorySize: 1536
  name: aws
  region: us-east-1
  runtime: nodejs8.10
  stage: dev
  timeout: 180
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

custom:
  bucket: sls-bucket-name
  hooks:
    package:initialize:
      - yarn run package-nochrome
  prefix: ${self:custom.stage}-${self:service}
  region: ${self:provider.region}
  sqs: ${self:custom.prefix}-messages
  stage: ${opt:stage, self:provider.stage}

functions:
  process:
    handler: index.handler
    name: ${self:custom.prefix}-process
    events:
      - sqs:
        arn:
          Fn::GetAtt:
            - ${self:custom.sqs}
            - Arn
    environment:
      region: ${self:custom.region}
      sqs: ${self:custom.sqs}
      BUCKET: ${self:custom.bucket}

resources:
  Resources:

    S3BucketAttachments:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket}
        CorsConfiguration:
          CorsRules:
            -
              AllowedOrigins:
                - '*'
              AllowedHeaders:
                - '*'
              AllowedMethods:
                - GET
                - PUT
                - POST
                - DELETE
                - HEAD
              MaxAge: 3000

    Messages:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - MessagesDeadLetterQueue
            - Arn
          maxReceiveCount: 10

    MessagesDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs}-dead-letter-queue
        MessageRetentionPeriod: 1209600

package:
  artifact: ./package.zip
  exclude:
    - docs/**
    - src/local/**
    - src/__tests__/**

plugins:
  - serverless-hooks-plugin
  